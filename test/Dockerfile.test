# Dockerfile.test
FROM node:18-bullseye

# نصب ابزارهای سیستمی مورد نیاز تست‌ها
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    docker.io \
    netcat \
    iputils-ping \
    jq && \
    rm -rf /var/lib/apt/lists/*

# ست کردن دایرکتوری کار
WORKDIR /app

# اضافه کردن start script
RUN echo '#!/bin/bash\n\
    set -e\n\
    echo "📦 Installing dependencies..."\n\
    echo "Current working directory: $(pwd)"\n\
    echo "Contents of /app:"\n\
    ls -la /app/\n\
    \n\
    # چون ما در پوشه test هستیم، package.json باید مستقیماً در /app باشد\n\
    if [ -f "/app/package.json" ]; then\n\
    echo "Found package.json in /app - installing dependencies..."\n\
    cd /app\n\
    npm install --no-audit --no-fund\n\
    else\n\
    echo "❌ No package.json found in /app!"\n\
    echo "Available files:"\n\
    find /app -name "package.json" -type f 2>/dev/null || echo "No package.json files found"\n\
    exit 1\n\
    fi\n\
    \n\
    echo "🔗 Testing network connectivity..."\n\
    # تست اتصال به پیرها\n\
    nc -zv test-peer0.shams.example.com 7151 || echo "Cannot connect to shams peer"\n\
    nc -zv test-peer0.rebar.example.com 9151 || echo "Cannot connect to rebar peer"\n\
    \n\
    echo "⏳ Waiting for chaincode deployment..."\n\
    sleep 30\n\
    \n\
    echo "🧪 Running tests..."\n\
    cd /app\n\
    npm test\n\
    \n\
    echo "✅ Tests completed!"\n' > /start.sh && \
    chmod +x /start.sh

# Default command
CMD ["/start.sh"]
